{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAE5B,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBE,OAEG,sBAAMC,SAhBQ,SAACC,GACnBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAQ,IAE5BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MASX,SAEC,uBACEO,KAAK,OACLC,MAAOT,EACPU,SA1BgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCPhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEkCC,UAAUH,GAF5C,+DAIFI,MAAMF,GAJJ,cAIdG,EAJc,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAQ,CACPC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAZlB,kBAgBbM,GAhBa,4CAAH,sDCDPO,EAAc,SAAC,GAAoB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAGjC,OACA,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAMrB,ECRuB,SAAEA,GAE3B,MAAyBd,mBAAS,CAElCqB,KAAK,GACLa,SAAS,IAHT,mBAAOC,EAAP,KAAcC,EAAd,KA2BA,OAnBAC,qBAAY,WAEXxB,EAAQC,GACPwB,MAAM,SAAAC,GAICH,EAAU,CAENf,KAAKkB,EACLL,SAAS,SAOpB,CAACpB,IAEIqB,EDrBuBK,CAAa1B,GAA7Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QASpB,OANDO,QAAQC,IAAIR,GAQT,qCACA,qBAAKJ,UAAU,yCAAf,cAA6DhB,EAA7D,OAEEoB,GAAW,mBAAGJ,UAAU,wCAAb,qBAEb,qBAAMA,UAAU,YAAhB,SAEOH,EAAOJ,KAAM,SAAAC,GAAG,OAEf,cAAC,EAAD,eAEOA,GADCA,EAAIC,aE9BbkB,EAAe,WAG5B,MAAiC3C,mBAAS,CAAC,cAA3C,mBAAO4C,EAAP,KAAkB7C,EAAlB,KASE,OACE,qCACK,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAGF,6BAEU6C,EAAWrB,KAAK,SAAAT,GAAQ,OAEtB,aADF,CACG,EAAD,CAEIA,SAAWA,GADLA,Y,MCtB7B+B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5960d0da.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( {setCategories}) => {\r\n  \r\n  const [inputValue, setInputValue]=useState('');\r\n  \r\n\r\n  const handleInputChange=(e)=>{\r\n      setInputValue(e.target.value);\r\n\r\n  }\r\n\r\n  const handleSubmit=(e)=>{\r\n   e.preventDefault();\r\n   // console.log('Submit hecho');\r\n\r\n   if(inputValue.trim().length >2)\r\n   {\r\n    setCategories(cats=>[ inputValue,...cats]);\r\n    setInputValue('');\r\n\r\n   }\r\n\r\n  }\r\n\r\n\r\n    return (\r\n    \r\n       <form onSubmit={handleSubmit}  >\r\n\r\n        <input \r\n          type='text'  \r\n          value={inputValue} \r\n          onChange={ handleInputChange  } \r\n        \r\n        />\r\n\r\n      </form>\r\n\r\n    \r\n  )\r\n}\r\n\r\nAddCategory.propTypes={\r\n  setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\n","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=GPDu7ULv60t0Kckb5CtSjXck1Xc19isx`;\r\n\r\n   const resp= await fetch(url);\r\n\r\n   const { data }= await resp.json();\r\n\r\n   const gifs = data.map(  img => {\r\n       return  {\r\n        id:img.id,\r\n        title:img.title,\r\n        url:img.images?.downsized_medium.url\r\n       }\r\n   })\r\n\r\n   return gifs;\r\n  \r\n\r\n  }","import React from 'react'\r\n\r\nexport const GifGridItem = (  {title,url} ) => {\r\n  \r\n  //console.log(id,title,url);\r\n    return (\r\n    <div className=\"card animate__animated animate__bounce\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n//export default GifGridItem\r\n","//import React, { useState,useEffect } from 'react'\r\nimport React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  \r\n  //const [images,setImages] =useState([]);\r\n\r\n \r\n\r\n     const {data:images,loading}=useFetchGifs(category );\r\n   \r\n   //console.log(data);\r\n   console.log(loading);\r\n  \r\n  \r\n\r\n  //getGifs();\r\n\r\n    return (\r\n\r\n      <>\r\n      <h3  className=\"card animate__animated animate__fadeIn\"  > { category } </h3>\r\n\r\n      { loading && <p className=\"card animate__animated animate__flash\"   >Loading</p>}\r\n\r\n      <div  className=\"card-grid\">   \r\n         {\r\n             images.map(  img => (\r\n           \r\n              <GifGridItem  \r\n                key={ img.id }\r\n                { ...img}  \r\n              \r\n              \r\n              />\r\n         \r\n              ))\r\n\r\n          }  \r\n        </div>\r\n    \r\n      \r\n      </>\r\n   \r\n  )\r\n}\r\n\r\n//export default GifGrid\r\n","import { useState,useEffect } from \"react\"\r\n//import { useEffect } from \"react/cjs/react.development\";\r\n\r\nimport { getGifs} from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n \r\n   const [state, setState]= useState({\r\n\r\n   data:[],\r\n   loading: true\r\n\r\n   });\r\n\r\n  \r\n   useEffect ( ()=> {\r\n\r\n    getGifs(category)\r\n    .then( imgs => {\r\n         \r\n\r\n        // setTimeout( ()=>  {\r\n            setState ({\r\n\r\n                data:imgs,\r\n                loading: false\r\n            }) ;  \r\n\r\n         //},3000)\r\n    })\r\n\r\n\r\n   },[category ])\r\n\r\n   return state;  // { data:[],loading: true}\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n \r\n \r\nconst [categories,setCategories]=useState(['One Punch']);\r\n\r\n/*const handleAdd =()=>{\r\n\r\n  //setCategories([...categories,'Hunter']);\r\n  setCategories(cats=>[...categories,'Hunter']);\r\n\r\n}*/\r\n\r\n  return (\r\n    <>\r\n         <h2>GifExpertApp </h2>\r\n         <AddCategory setCategories={setCategories}/>\r\n\r\n         <hr />\r\n     \r\n\r\n       <ol>\r\n           {\r\n                 categories.map( category => (\r\n                 // return  <li key={category}  >  { category }</li>\r\n                   <GifGrid \r\n                       key={ category }\r\n                       category={ category } \r\n                   />\r\n\r\n                 ))\r\n           }\r\n\r\n       </ol>\r\n \r\n\r\n    </>\r\n  )\r\n}\r\n\r\n//export default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}